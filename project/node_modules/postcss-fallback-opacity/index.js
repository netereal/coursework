var postcss = require('postcss');

module.exports = postcss.plugin('postcss-opacity-fallback', function(option){
    return function (css){
    option = option ||  {};
    css.walkRules(function (rule){
        rule.walkDecls(function (decl, i){
            var new_value = decl.value;
            if(value.indexOf('opacity')!== -1){
                mupltiplyByHundreed = value*100;
                
                switch(propertiesForPush){
                    case '-ms-filter':
                        new_value = '"progid:DXImageTransform.Microsoft.Alpha(Opacity=' + mupltiplyByHundreed+ ')"';
                        break;
                    case 'filter':
                        new_value = 'alpha(opacity=' + mupltiplyByHundreed + ')';
                        break;
                    case 'opacity':
                    case '-moz-opacity':
                    case '-khtml-opacity':
                        
                   decl.value = value;                     
                }
            
            }
            
            
        });
    });
    }
});

